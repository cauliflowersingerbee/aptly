{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","collapsed","handleClick","setState","event","this","props","className","summary","start","dateTime","timeZone","location","Button","variant","onClick","href","htmlLink","rel","target","description","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","style","display","NumberOfEvents","numberOfEvents","updateNumberOfEvents","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","window","startsWith","done","getAccessToken","token","removeQuery","url","axios","get","data","localStorage","setItem","JSON","stringify","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","App","locationEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.4cb7f0b0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Button} from 'react-bootstrap';\n\nclass Event extends Component {\n  state = {\n    collapsed: true,\n  };\n\n  handleClick = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  render() {\n    const { event } = this.props;\n    const { collapsed } = this.state;\n\n    return  <div className=\"event\">\n              <h2 className=\"summary\">{event.summary}</h2>\n              <p className=\"start-date\">\n              {event.start.dateTime} ({event.start.timeZone})\n              </p>\n              <p className=\"location\">\n                {event.location}\n              </p>\n              <Button variant=\"primary\" className=\"show-more\" onClick={this.handleClick}>\n                    Details\n              </Button>\n                <div className={`more-info ${collapsed ? `hidden` : `show`}`}>\n                  <h3>About this event:</h3>\n                  <a href={event.htmlLink} rel=\"noreferrer\" target=\"_blank\">\n                    See details on Google Calendar\n                  </a>\n                  <p className=\"event-description\">{event.description}</p>\n                </div>\n            </div>\n  }\n}\nexport default Event;\n","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n    render() {\n        const { events } = this.props;\n        return (\n          <ul className=\"EventList\">\n              {events.map(event =>\n        <li key={event.id}>\n          <Event event={event} />\n        </li>\n      )}\n          </ul>\n        );\n      }\n}\n\nexport default EventList;\n","import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n  state = {\n    query: '',\n    suggestions: [], \n    showSuggestions: undefined\n  }\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    const suggestions = this.props.locations.filter((location) => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    this.setState({\n      query: value,\n      suggestions,\n    });\n  };\n\n  handleItemClicked = (suggestion) => {\n    this.setState({\n      query: suggestion, \n      showSuggestions: false\n    });\n    this.props.updateEvents(suggestion);\n  }\n  \n  \n  render() {\n    return (\n      <div className=\"CitySearch\">\n          <input\n        type=\"text\"\n        className=\"city\"\n        value={this.state.query}\n        onChange={this.handleInputChanged}\n        onFocus={() => { this.setState({ showSuggestions: true }) }}\n      />\n      <ul className=\"suggestions\" style={this.state.showSuggestions ? \n        {}: { display: 'none' }}>\n         {this.state.suggestions.map((suggestion) => (\n         <li\n            key={suggestion}\n            onClick={() => this.handleItemClicked(suggestion)}>\n            {suggestion}\n        </li>\n       ))}\n         <li key=\"all\" onClick={() => this.handleItemClicked(\"all\")}>\n           <b>See all cities</b>\n         </li>\n      </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;\n","import React, {Component} from 'react';\n\nclass NumberOfEvents extends Component {\n  state = {\n    suggestions: []\n  }\n\n  render() {\n    return (\n      <div className=\"NumberOfEvents\">\n        <input\n        type=\"number\"\n        className=\"number-events-input\"\n        value={this.props.numberOfEvents}\n        onChange={this.props.updateNumberOfEvents}\n        />\n        <ul className=\"suggestions\">\n           {this.state.suggestions.map((suggestion) => (\n             <li\n                key={suggestion}\n                onClick={() => this.handleItemClicked(suggestion)}\n                >{suggestion}\n             </li>\n                ))}\n             <li>\n              <b>Choose a number</b>\n            </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;\n","const mockData = [\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181159875584000\\\"\",\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:14:30.000Z\",\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\n        \"summary\": \"React is Fun\",\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n        \"location\": \"Berlin, Germany\",\n        \"creator\": {\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\n         \"self\": true\n        },\n        \"organizer\": {\n         \"email\": \"fullstackwebdev@careerfoundry.com\",\n         \"self\": true\n        },\n        \"start\": {\n         \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n         \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n        \"originalStartTime\": {\n         \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n         \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n         \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n       },\n];\n\nexport { mockData }; \n","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nexport const checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url = \"https://eeah9wx4kb.execute-api.eu-central-1.amazonaws.com/dev/api/get-events\" + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nexport const getAccessToken = async () => {\n\n  const accessToken = localStorage.getItem('access_token');\n\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://eeah9wx4kb.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    \"https://eeah9wx4kb.execute-api.eu-central-1.amazonaws.com/dev/api/token\" + '/' + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NumberOfEvents from './NumberOfEvents';\nimport { getEvents, extractLocations } from './api';\n\n\n\nclass App extends Component {\n  state = {\n    events: [], \n    locations: []\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n         <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n         <EventList events={this.state.events} />\n         <NumberOfEvents />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}